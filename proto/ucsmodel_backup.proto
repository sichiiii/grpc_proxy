// Python from protoc directly
// ~/Code/protoc/bin/protoc -I=. --python_out=./ --grpc_python_out=. ./proto/ucsmodel.proto
// As python plugin
// python -m grpc_tools.protoc -I=. --python_out=. --grpc_python_out=. ./proto/ucsmodel.proto
// C#
// /home/alexey/Code/protoc/bin/protoc -I=. --csharp_out=./proto/ ./proto/ucsmodel.proto --grpc_out=./proto/ --plugin=protoc-gen-grpc=/home/alexey/Code/protoc/bin/grpc_csharp_plugin

syntax = "proto3";

package ucs;

// ******
// Services
// ******

service UCS {
  /* Get object by id with transform specifier, tmp: imports manifest/glb if manifest hash is old */
  rpc getObject (ObjectRequest) returns (UCSObject) {}

  /* Get a list of objects in one request */
  rpc getObjectsStream (ObjectsRequest) returns (stream UCSObject) {}

  /* Get texture by texture guid (original png hashed_value) */
  rpc getAsset (AssetRequest) returns (AssetReply) {}

  /* Get an asset in a stream - for large textures */
  rpc getAssetStream (AssetRequest) returns (stream AssetReply) {}

//  /* Temporal solution to force object recalculation regardless of manifest hash */
//  rpc tmpAdminRecalcManifest (ObjectRequest) returns (UCSObject) {}

}

// Request object, supply with transformSpecifier (leave transformSpecifier empty for blender coordinate system).
message ObjectRequest {
  string objectId = 1;
  oneof transformSpecifier {
    transformSpecifierEngine engineSpecifier = 2;
    // TODO, slower
    transformSpecifierAxis axisSpecifier = 3;
    // TODO, slower
    transformSpecifierMatrix matrixSpecifier = 4;
  }
}

message ObjectsRequest {
  repeated string objectIdList = 1;
  oneof transformSpecifier {
    transformSpecifierEngine engineSpecifier = 2;
    // TODO, slower
    transformSpecifierAxis axisSpecifier = 3;
    // TODO, slower
    transformSpecifierMatrix matrixSpecifier = 4;
  }
}

// e.g. 'unity' / 'threejs' / 'blender'
message transformSpecifierEngine{
  string engineType = 1;
}

// e.g. forward='X' up='Z'
message transformSpecifierAxis{
  string forward = 1;
  string up = 2;
}

// e.g. 3x3 unit orthogonal matrix, e.g. eye-matrix with mirroring over y [1, 0, 0, 0, -1, 0, 0, 0, 1]
message transformSpecifierMatrix{
  repeated sint32 matrix = 1;
}

// Request asset by it's hash
message AssetRequest {
  string assetUuid = 1;
  TexFormat format = 2;
}

message AssetReply {
  bytes file = 1;
}

enum TexFormat {
  PNG = 0;
  ETC2 = 1;
  DXT = 2;
  ASTC = 3;
  BASIS = 4;
  KTX2 = 5;
}

message JobStatus {
  string state = 1;
}


// ******
// Messages
// ******

message UCSObject {
  ModelMetadata metadata = 1;
  repeated MeshModel meshes = 2;
  repeated Material materials = 3;
  repeated Texture textures = 4;

  repeated Effect effects = 5;
  map<int32, ChildrenViews> views = 6;

}

enum Side {
  FRONT = 0;  // default
  BACK = 1;
  BOTH = 2;
}

enum NoiseType {
  PERLIN = 0;  // default
  WHITE = 1;
}

enum ParticleDistributionTypes {
  BOX = 0;  // default
  SPHERE = 1;
  DISC = 2;
}

// ***
// Metadata
// ***

message ModelMetadata {
  map<string, string> name = 1;
  map<string, Tags> tags = 2;
  map<string, string> description = 3;
  repeated string previews = 4;
  Category category = 5;
  string blockId = 6;
  repeated string previews_large = 7;
}

message Category {
  string ident = 1;
  map<string, string> name = 2;
}

message Tags {
  repeated string tag = 1;
}

// ***
// Mesh
// ***

message Mesh {
  repeated float vertices = 1;
  repeated float normals = 2;
  repeated float uv = 3;
  repeated uint32 faces = 4;
  repeated MeshFrame frames = 5;
}

message MeshFrame {
  repeated float frameSeq = 1;
}

message MeshModel {
  string id = 1;
  Mesh source = 2;
  repeated Modifier modifiers = 3;
  map<int32, Mesh> lodData = 4;
}

message Modifier {
  repeated float modifiers = 1;
}

// ***
// Materials and textures
// ***

message Material {
  string id = 1;
  map<string, string> name = 2;
  map<string, string> description = 3;
  float roughness = 4;
  string roughnessMap = 5;
  float metalness = 6;
  string metalnessMap = 7;
  string color = 8;  // rgb string "0xffffff"
  string map = 9;
  string emissive = 10;
  string emissiveMap = 11;
  float emissiveIntensity = 12;
  string aoMap = 13;
  float aoMapIntensity = 14;
  string normalMap = 15;
  float normalScale = 16;
  string envMap = 17;
  float envMapIntensity = 18;
  bool transparent = 19;
  bool castShadows = 20;
  bool receiveShadows = 21;
  float opacity = 22;
  Side side = 23;  // back, both
  string blending = 24;
  float alphaTest = 25;
}

message Texture {
  string id = 1;
  map<string, string> name = 2;
  string format = 3;  //png, gput
  repeated float repeat = 4;
  repeated float offset = 5;
  repeated float size = 6;
  float rotation = 7;
  repeated float center = 8;
  repeated string image = 9;  //mipmaps
}

// ***
// Effects
// ***

message Effect {
  oneof effect {
    WaterEffect waterEffect = 1;
    ColormapEffect colormapEffect = 2;
    WindEffect windEffect = 3;
    HologramEffect hologramEffect = 4;
  }
}

message WaterEffect {
  string hash = 1;
  float waveScale = 2;
  float waveSpeed = 3;
  string color = 4;
}

message ColormapEffect {
  string hash = 1;
  float size = 2;
  NoiseType noiseType = 3;
  string color = 4;
}

message WindEffect {
  string hash = 1;
  float speed = 2;
  repeated float direction = 3;
  float waveLength = 4;
  float startHeight = 5;
}

message HologramEffect {
  string hash = 1;
  float speed = 2;
  NoiseType noiseType = 3;
  repeated float direction = 4;
  string glowColor = 5;
  float opacity = 6;
}

// ***
// Child view objects
// ***

message ChildrenViews {
  // repeated oneof is forbidden
  repeated Child children = 1;
}

message Child {
  oneof property {
    MeshChild meshChild = 1;
    LightChild lightChild = 2;
    ParticlesChild particlesChild = 3;
  }
}

message MeshChild {
  repeated float transform = 1;
  string mesh = 2;
  bool animate = 3;
  float loop = 4; // anim count
  float direction = 5; // 1 / -1
  repeated float frames = 6;
  float duration = 7; //ms
  string interpolation = 8;
  string material = 9;
  repeated string effects = 10;
}

message LightChild {
  repeated float transform = 1;
  float intensity = 2;
  string color = 3;
}

message ParticlesChild {
  // https://squarefeet.github.io/ShaderParticleEngine/docs/api/global.html#EmitterOptions
  repeated float transform = 1;
  ParticleDistributionTypes type = 2;
  int32 particleCount = 3;
  float duration = 4;
  bool isStatic = 5;
  float activeMultiplier = 6;
  float direction = 7;
  float maxAge = 8;
  float maxAgeSpread = 9;
  repeated float position = 10;
  repeated float positionSpread = 11;
  repeated float positionSpreadClamp = 12;
  float positionRadius = 13;
  repeated float positionRadiusScale = 14;
  ParticleDistributionTypes positionDistribution = 15;
  bool positionRandomise = 16;
  repeated float velocity = 17;
  repeated float velocitySpread = 18;
  ParticleDistributionTypes velocityDistribution = 19;
  bool velocityRandomise = 20;
  repeated float acceleration = 21;
  repeated float accelerationSpread = 22;
  ParticleDistributionTypes accelerationDistribution = 23;
  bool accelerationRandomise = 24;
  float wiggle = 25;
  float wiggleSpread = 26;
  repeated float rotationAxis = 27;
  repeated float rotationAxisSpread = 28;
  float rotationAngle = 29;
  float rotationAngleSpread = 30;
  bool rotationStatic = 31;
  repeated float rotationCenter = 32;  // as position
  bool rotationRandomise = 33;
  string color = 34;
  repeated float colorSpread = 35;
  bool colorRandomise = 36;
  float opacity = 37;
  float opacitySpread = 38;
  bool opacityRandomise = 39;
  float size = 40;
  float sizeSpread = 41;
  bool sizeRandomise = 42;
  string texture = 43;
}
